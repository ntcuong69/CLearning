// src/lib/cSuggestions.ts
import type * as Monaco from "monaco-editor";
export const getCSuggestions = (range: Monaco.IRange): Monaco.languages.CompletionItem[] => [
  { label: "void", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "void ", documentation: "Kiểu không trả về giá trị", range },
  { label: "char", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "char ", documentation: "Ký tự", range },
  { label: "int", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "int ", documentation: "Số nguyên", range },
  { label: "short", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "short ", documentation: "Số nguyên ngắn", range },
  { label: "long", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "long ", documentation: "Số nguyên dài", range },
  { label: "float", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "float ", documentation: "Số thực dấu chấm động", range },
  { label: "double", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "double ", documentation: "Số thực độ chính xác cao", range },
  { label: "signed", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "signed ", documentation: "Có dấu", range },
  { label: "unsigned", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "unsigned ", documentation: "Không dấu", range },

  // -- Constant và typedef/enums --
  { label: "const", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "const ", documentation: "Hằng số", range },
  { label: "sizeof", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "sizeof($1)", insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet, documentation: "Kích thước bộ nhớ (byte)", range },
  { label: "typedef", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "typedef ", insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet, documentation: "Định nghĩa tên kiểu mới", range },
  { label: "struct", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "struct $1 {\n\t$0\n};", insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet, documentation: "Khai báo struct", range },
  { label: "enum", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "enum $1 {\n\t$0\n};", insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet, documentation: "Khai báo enum", range },

  // -- Control flow --
  { label: "if", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "if ($1) {\n\t$0\n}", insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet, documentation: "Kiểm tra điều kiện", range },
  { label: "else", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "else {\n\t$0\n}", insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet, documentation: "Nhánh ngược lại", range },
  { label: "else if", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "else if ($1) {\n\t$0\n}", insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet, documentation: "Thêm điều kiện", range },
  { label: "switch", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "switch ($1) {\n\tcase $2:\n\t\t$0\n\t\tbreak;\n\tdefault:\n\t\tbreak;\n}", insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet, documentation: "Cấu trúc lựa chọn", range },
  { label: "case", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "case $1:\n\t$0\n\tbreak;", insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet, documentation: "Nhánh case trong switch", range },
  { label: "default", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "default:\n\t$0\n\tbreak;", insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet, documentation: "Nhánh mặc định", range },
  { label: "for", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "for (int $1 = 0; $1 < $2; ++$1) {\n\t$0\n}", insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet, documentation: "Vòng lặp for", range },
  { label: "while", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "while ($1) {\n\t$0\n}", insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet, documentation: "Vòng lặp while", range },
  { label: "do", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "do {\n\t$0\n} while ($1);", insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet, documentation: "Vòng lặp do‑while", range },
  { label: "break", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "break;", documentation: "Thoát vòng lặp/switch", range },
  { label: "continue", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "continue;", documentation: "Bỏ qua lần lặp hiện tại", range },
  { label: "return", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "return $1;", insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet, documentation: "Trả về giá trị từ hàm", range },
  { label: "goto", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "goto $1;", insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet, documentation: "Nhảy đến nhãn", range },
  { label: "case", kind: monaco.languages.CompletionItemKind.Keyword, insertText: "case $1: break;", documentation: "Nhánh trong switch", range },

  // -- Các hàm tiện ích phổ biến (stdlib.h, stdio.h, string.h, ...) --
  { label: "printf", kind: monaco.languages.CompletionItemKind.Function, insertText: "printf(\"%d\", $1);", insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet, documentation: "In định dạng (stdio.h)", range },
  { label: "scanf", kind: monaco.languages.CompletionItemKind.Function, insertText: "scanf(\"%d\", &$1);", insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet, documentation: "Đọc đầu vào (stdio.h)", range },
  { label: "puts", kind: monaco.languages.CompletionItemKind.Function, insertText: "puts($1);", documentation: "In chuỗi kèm newline (stdio.h)", range },
  { label: "gets", kind: monaco.languages.CompletionItemKind.Function, insertText: "gets($1);", documentation: "Đọc chuỗi (stdio.h) — không an toàn", range },
  { label: "fopen", kind: monaco.languages.CompletionItemKind.Function, insertText: "fopen($1, $2);", documentation: "Mở file (stdio.h)", range },
  { label: "fclose", kind: monaco.languages.CompletionItemKind.Function, insertText: "fclose($1);", documentation: "Đóng file (stdio.h)", range },
  { label: "fread", kind: monaco.languages.CompletionItemKind.Function, insertText: "fread($1, $2, $3, $4);", documentation: "Đọc file (stdio.h)", range },
  { label: "fwrite", kind: monaco.languages.CompletionItemKind.Function, insertText: "fwrite($1, $2, $3, $4);", documentation: "Ghi file (stdio.h)", range },
  { label: "malloc", kind: monaco.languages.CompletionItemKind.Function, insertText: "malloc($1);", documentation: "Cấp phát động (stdlib.h)", range },
  { label: "calloc", kind: monaco.languages.CompletionItemKind.Function, insertText: "calloc($1, $2);", documentation: "Cấp phát mảng (stdlib.h)", range },
  { label: "realloc", kind: monaco.languages.CompletionItemKind.Function, insertText: "realloc($1, $2);", documentation: "Thay đổi kích thước vùng nhớ (stdlib.h)", range },
  { label: "free", kind: monaco.languages.CompletionItemKind.Function, insertText: "free($1);", documentation: "Giải phóng vùng nhớ (stdlib.h)", range },
  { label: "strcpy", kind: monaco.languages.CompletionItemKind.Function, insertText: "strcpy($1, $2);", documentation: "Sao chép chuỗi (string.h)", range },
  { label: "strncpy", kind: monaco.languages.CompletionItemKind.Function, insertText: "strncpy($1, $2, $3);", documentation: "Sao chép chuỗi có giới hạn (string.h)", range },
  { label: "strcat", kind: monaco.languages.CompletionItemKind.Function, insertText: "strcat($1, $2);", documentation: "Nối chuỗi (string.h)", range },
  { label: "strcmp", kind: monaco.languages.CompletionItemKind.Function, insertText: "strcmp($1, $2);", documentation: "So sánh chuỗi (string.h)", range },
  { label: "strncmp", kind: monaco.languages.CompletionItemKind.Function, insertText: "strncmp($1, $2, $3);", documentation: "So sánh chuỗi giới hạn (string.h)", range },
  { label: "strlen", kind: monaco.languages.CompletionItemKind.Function, insertText: "strlen($1);", documentation: "Độ dài chuỗi (string.h)", range },
  { label: "memcpy", kind: monaco.languages.CompletionItemKind.Function, insertText: "memcpy($1, $2, $3);", documentation: "Copy bộ nhớ (string.h)", range },
  { label: "memmove", kind: monaco.languages.CompletionItemKind.Function, insertText: "memmove($1, $2, $3);", documentation: "Copy bộ nhớ an toàn (string.h)", range },
  { label: "memset", kind: monaco.languages.CompletionItemKind.Function, insertText: "memset($1, $2, $3);", documentation: "Gán byte (string.h)", range },
  { label: "malloc", kind: monaco.languages.CompletionItemKind.Function, insertText: "malloc($1);", documentation: "Cấp phát động (stdlib.h)", range },

  // -- Thêm hàm thời gian, toán học, kiểm tra ký tự --
  { label: "time", kind: monaco.languages.CompletionItemKind.Function, insertText: "time(NULL);", documentation: "Lấy thời gian hiện tại (time.h)", range },
  { label: "difftime", kind: monaco.languages.CompletionItemKind.Function, insertText: "difftime($1, $2);", documentation: "Hiệu thời gian (time.h)", range },
  { label: "localtime", kind: monaco.languages.CompletionItemKind.Function, insertText: "localtime(&$1);", documentation: "Chuyển đến struct tm (time.h)", range },
  { label: "gmtime", kind: monaco.languages.CompletionItemKind.Function, insertText: "gmtime(&$1);", documentation: "Chuyển đến UTC struct tm (time.h)", range },
  { label: "rand", kind: monaco.languages.CompletionItemKind.Function, insertText: "rand();", documentation: "Sinh số ngẫu nhiên (stdlib.h)", range },
  { label: "srand", kind: monaco.languages.CompletionItemKind.Function, insertText: "srand(time(NULL));", documentation: "Khởi tạo RNG (stdlib.h)", range },
  { label: "abs", kind: monaco.languages.CompletionItemKind.Function, insertText: "abs($1);", documentation: "Giá trị tuyệt đối int (stdlib.h)", range },
  { label: "fabs", kind: monaco.languages.CompletionItemKind.Function, insertText: "fabs($1);", documentation: "Giá trị tuyệt đối float (math.h)", range },
  { label: "pow", kind: monaco.languages.CompletionItemKind.Function, insertText: "pow($1, $2);", documentation: "Luỹ thừa (math.h)", range },
  { label: "sqrt", kind: monaco.languages.CompletionItemKind.Function, insertText: "sqrt($1);", documentation: "Căn bậc hai (math.h)", range },
  { label: "sin", kind: monaco.languages.CompletionItemKind.Function, insertText: "sin($1);", documentation: "Hàm sin (math.h)", range },
  { label: "cos", kind: monaco.languages.CompletionItemKind.Function, insertText: "cos($1);", documentation: "Hàm cos (math.h)", range },
  { label: "tan", kind: monaco.languages.CompletionItemKind.Function, insertText: "tan($1);", documentation: "Hàm tan (math.h)", range },
  { label: "ceil", kind: monaco.languages.CompletionItemKind.Function, insertText: "ceil($1);", documentation: "Làm tròn lên (math.h)", range },
  { label: "floor", kind: monaco.languages.CompletionItemKind.Function, insertText: "floor($1);", documentation: "Làm tròn xuống (math.h)", range },
  { label: "toupper", kind: monaco.languages.CompletionItemKind.Function, insertText: "toupper($1);", documentation: "Chuyển ký tự lên hoa (ctype.h)", range },
  { label: "tolower", kind: monaco.languages.CompletionItemKind.Function, insertText: "tolower($1);", documentation: "Chuyển ký tự xuống thường (ctype.h)", range },
  { label: "isdigit", kind: monaco.languages.CompletionItemKind.Function, insertText: "isdigit($1);", documentation: "Kiểm tra chữ số (ctype.h)", range },
  { label: "isalpha", kind: monaco.languages.CompletionItemKind.Function, insertText: "isalpha($1);", documentation: "Kiểm tra ký tự chữ (ctype.h)", range },
  { label: "isalnum", kind: monaco.languages.CompletionItemKind.Function, insertText: "isalnum($1);", documentation: "Chữ hoặc số (ctype.h)", range },
  { label: "isspace", kind: monaco.languages.CompletionItemKind.Function, insertText: "isspace($1);", documentation: "Kiểm tra khoảng trắng (ctype.h)", range },
  { label: "isprint", kind: monaco.languages.CompletionItemKind.Function, insertText: "isprint($1);", documentation: "Kiểm tra ký tự có thể in (ctype.h)", range },

  // -- Hàm thoát chương trình --
  { label: "exit", kind: monaco.languages.CompletionItemKind.Function, insertText: "exit($1);", documentation: "Thoát chương trình (stdlib.h)", range },
  
  // -- Thêm tiện ích khác: assert, memcpy, realloc, abort...
  { label: "assert", kind: monaco.languages.CompletionItemKind.Function, insertText: "assert($1);", documentation: "Kiểm tra điều kiện (assert.h)", range },
  { label: "abort", kind: monaco.languages.CompletionItemKind.Function, insertText: "abort();", documentation: "Kết thúc chương trình ngay lập tức (stdlib.h)", range },
  { label: "memcpy", kind: monaco.languages.CompletionItemKind.Function, insertText: "memcpy($1, $2, $3);", documentation: "Sao chép bộ nhớ (string.h)", range },
  { label: "realloc", kind: monaco.languages.CompletionItemKind.Function, insertText: "realloc($1, $2);", documentation: "Thay đổi kích thước vùng nhớ (stdlib.h)", range },
  { label: "strchr", kind: monaco.languages.CompletionItemKind.Function, insertText: "strchr($1, $2);", documentation: "Tìm ký tự trong chuỗi (string.h)", range },
  { label: "strstr", kind: monaco.languages.CompletionItemKind.Function, insertText: "strstr($1, $2);", documentation: "Tìm chuỗi con trong chuỗi (string.h)", range },
  { label: "strtok", kind: monaco.languages.CompletionItemKind.Function, insertText: "strtok($1, $2);", documentation: "Tách chuỗi theo dấu phân cách (string.h)", range },
    { label: "strdup", kind: monaco.languages.CompletionItemKind.Function, insertText: "strdup($1);", documentation: "Sao chép chuỗi (string.h)", range },
    { label: "strerror", kind: monaco.languages.CompletionItemKind.Function, insertText: "strerror($1);", documentation: "Lấy mô tả lỗi (string.h)", range },
    { label: "perror", kind: monaco.languages.CompletionItemKind.Function, insertText: "perror($1);", documentation: "In lỗi ra stderr (stdio.h)", range },
    { label: "setjmp", kind: monaco.languages.CompletionItemKind.Function, insertText: "setjmp($1);", documentation: "Thiết lập điểm nhảy (setjmp.h)", range },
    { label: "longjmp", kind: monaco.languages.CompletionItemKind.Function, insertText: "longjmp($1, $2);", documentation: "Nhảy đến điểm đã thiết lập (setjmp.h)", range },
    { label: "fgets", kind: monaco.languages.CompletionItemKind.Function, insertText: "fgets($1, $2, $3);", documentation: "Đọc chuỗi từ file (stdio.h)", range },
    { label: "fputs", kind: monaco.languages.CompletionItemKind.Function, insertText: "fputs($1, $2);", documentation: "Ghi chuỗi vào file (stdio.h)", range },
];
